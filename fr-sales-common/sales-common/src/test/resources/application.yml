####################################################################################################
# Current platform's information.
####################################################################################################
platform:
  name:
    short: SLS
    full: sales
  version: v1

####################################################################################################
# Context path of the application.
####################################################################################################
server:
  context-path: /${platform.version}

####################################################################################################
# Spring Setting
####################################################################################################
spring:
  main:
    banner-mode: 'off'
  messages:
    always-use-message-format: false
    basename: i18n/messages,messages-canada,ValidationMessages
    cache-seconds: -1
    encoding: UTF-8
    fallback-to-system-locale: true
  datasource:
    url: jdbc:postgresql://unittest-db.ap-northeast-1.maintenance:5432/unittest
    username: testuser
    password: DxxuireMqm6b
    driverClassName: org.postgresql.Driver
  resources:
    add-mappings: false
  mvc:
    throw-exception-if-no-handler-found: true
  jackson:
      date-format: java.text.SimpleDateFormat
      default-property-inclusion: non-null
      property-naming-strategy: CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
mybatis:
  configuration:
    map-underscore-to-camel-case: true
####################################################################################################
# api service
####################################################################################################
api-service:
  name: sales

####################################################################################################
# Hmac Authentication Setting
####################################################################################################
hmac:
 price:
   clientId: 7654321
   clientSecret: price
 sales:
   clientId: 7654321
   clientSecret: sales
 edf:
   clientId: 7654321
   clientSecret: edf
 storeinventory:
   clientId: 7654321
   clientSecret: storeinventory

####################################################################################################
# trace id's version
####################################################################################################
version:
  aws: 1

# Log Level
logging:
  level:
    com.fastretailing.oms: DEBUG

####################################################################################################
# RestTemplate Setting
####################################################################################################
client:
  baseConfig:
    connectTimeout: 5000
    readTimeout: 5000
    retryCount: 3
    retryInterval: 5000
    proxyHost:
    proxyPort:
    proxyUser:
    proxyPassword:
  apiConfig:
    edf:
      host:
        admin: localhost:8080
        consumer: localhost:8080
      platform: storeInventory
      version: v1
      uri:
        base:
          admin: http://${client.apiConfig.storeInventory.host.admin}/${client.apiConfig.storeInventory.platform}/${client.apiConfig.storeInventory.version}
          consumer: http://${client.apiConfig.storeInventory.host.consumer}/${client.apiConfig.storeInventory.platform}/${client.apiConfig.storeInventory.version}
        apis:
          edfRest:
            post:
              admin: http://localhost:8080/kong_context_path/edf/rest/EDR/SLS-daily-sales-report-create-00004
              consumer: http://localhost:8080/kong_context_path/edf/rest/EDR/SLS-daily-sales-report-create-00004
    sales:
      host:
        admin: localhost:8080
        consumer: localhost:8080
      platform: sales
      version: v1
      uri:
        base:
          admin: http://${client.apiConfig.sales.host.admin}/${client.apiConfig.sales.platform}/${client.apiConfig.sales.version}
          consumer: http://${client.apiConfig.sales.host.consumer}/${client.apiConfig.sales.platform}/${client.apiConfig.sales.version}
        apis:
          transactionImport:
            post:
              admin: ${client.apiConfig.sales.uri.base.admin}/{brand}/{region}/transaction-import/{channel_code}/{store_code}/{integrated_order_id}/{order_sub_number}/{update_type}
              consumer: ${client.apiConfig.sales.uri.base.consumer}/{brand}/{region}/transaction-import/{channel_code}/{store_code}/{integrated_order_id}/{order_sub_number}/{update_type}
          alterationPayOffDataImport:
            post:
              admin: ${client.apiConfig.sales.uri.base.admin}/{brand}/{region}/alteration-pay-off-data-import
              consumer: ${client.apiConfig.sales.uri.base.consumer}/{brand}/{region}/alteration-pay-off-data-import

    storeinventory:
      host:
        admin: localhost:8080
        consumer: localhost:8080
      platform: storeinventory
      version: v1
      uri:
        base:
          admin: http://${client.apiConfig.storeinventory.host.admin}/${client.apiConfig.storeinventory.platform}/${client.apiConfig.storeinventory.version}
          consumer: http://${client.apiConfig.storeinventory.host.consumer}/${client.apiConfig.storeinventory.platform}/${client.apiConfig.storeinventory.version}
        apis:
          salesFigures:
            get:
              admin: ${client.apiConfig.storeinventory.uri.base.admin}/{brand}/{region}/{store_code}/sales-figures
              consumer: ${client.apiConfig.storeinventory.uri.base.consumer}/{brand}/{region}/{store_code}/sales-figures