<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fastretailing.dcp.sales.common.repository.optional.PayoffDataOptionalMapper">
  <resultMap id="BaseResultMap" type="com.fastretailing.dcp.sales.common.repository.optional.PayoffDataOptionalMapper">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="store_code" jdbcType="VARCHAR" property="storeCode" />
    <id column="payoff_date" jdbcType="VARCHAR" property="payoffDate" />
    <id column="payoff_type_code" jdbcType="VARCHAR" property="payoffTypeCode" />
    <id column="payoff_type_sub_number_code" jdbcType="VARCHAR" property="payoffTypeSubNumberCode" />
    <id column="cash_register_no" jdbcType="NUMERIC" property="cashRegisterNo" />
    <id column="advance_received_store_code" jdbcType="VARCHAR" property="advanceReceivedStoreCode" />
    <result column="payoff_amount_currency_code" jdbcType="VARCHAR" property="payoffAmountCurrencyCode" />
    <result column="payoff_amount" jdbcType="NUMERIC" property="payoffAmount" />
    <result column="payoff_quantity" jdbcType="NUMERIC" property="payoffQuantity" />
    <result column="report_output_count" jdbcType="NUMERIC" property="reportOutputCount" />
    <result column="processing_flag" jdbcType="BIT" property="processingFlag" />
    <result column="integrity_check_type" jdbcType="VARCHAR" property="integrityCheckType" />
    <result column="accounting_record_status" jdbcType="NUMERIC" property="accountingRecordStatus" />
    <result column="batch_region" jdbcType="NUMERIC" property="batchRegion" />
    <result column="system_brand_code" jdbcType="VARCHAR" property="systemBrandCode" />
    <result column="system_business_code" jdbcType="VARCHAR" property="systemBusinessCode" />
    <result column="system_country_code" jdbcType="VARCHAR" property="systemCountryCode" />
    <result column="regular_time_error_notification_flag" jdbcType="BIT" property="regularTimeErrorNotificationFlag" />
    <result column="daily_summary_error_notification_flag" jdbcType="BIT" property="dailySummaryErrorNotificationFlag" />
    <result column="data_alteration_status" jdbcType="VARCHAR" property="dataAlterationStatus" />
    <result column="close_complete_flag" jdbcType="BIT" property="closeCompleteFlag" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime" />
    <result column="create_program_id" jdbcType="VARCHAR" property="createProgramId" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
    <result column="update_datetime" jdbcType="TIMESTAMP" property="updateDatetime" />
    <result column="update_program_id" jdbcType="VARCHAR" property="updateProgramId" />
  </resultMap>
  <sql id="Update_By_Condition_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <insert id="insert" parameterType="com.fastretailing.dcp.sales.common.entity.optional.PayoffDataOptional">
    insert into t_pay_off_data (store_code, payoff_date, payoff_type_code, 
      payoff_type_sub_number_code, cash_register_no, 
      advance_received_store_code, payoff_amount_currency_code, 
      payoff_amount, payoff_quantity, report_output_count, 
      processing_flag, integrity_check_type, accounting_record_status, 
      batch_region, system_brand_code, system_business_code, 
      system_country_code, regular_time_error_notification_flag, 
      daily_summary_error_notification_flag, data_alteration_status, 
      close_complete_flag, create_user_id, create_datetime, 
      create_program_id, update_user_id, update_datetime, 
      update_program_id)
    values (#{storeCode,jdbcType=VARCHAR}, #{payoffDate,jdbcType=VARCHAR}, #{payoffTypeCode,jdbcType=VARCHAR}, 
      #{payoffTypeSubNumberCode,jdbcType=VARCHAR}, #{cashRegisterNo,jdbcType=NUMERIC}, 
      #{advanceReceivedStoreCode,jdbcType=VARCHAR}, #{payoffAmountCurrencyCode,jdbcType=VARCHAR}, 
      #{payoffAmount,jdbcType=NUMERIC}, #{payoffQuantity,jdbcType=NUMERIC}, #{reportOutputCount,jdbcType=NUMERIC}, 
      #{processingFlag,jdbcType=BIT}, #{integrityCheckType,jdbcType=VARCHAR}, #{accountingRecordStatus,jdbcType=NUMERIC}, 
      #{batchRegion,jdbcType=NUMERIC}, #{systemBrandCode,jdbcType=VARCHAR}, #{systemBusinessCode,jdbcType=VARCHAR}, 
      #{systemCountryCode,jdbcType=VARCHAR}, #{regularTimeErrorNotificationFlag,jdbcType=BIT}, 
      #{dailySummaryErrorNotificationFlag,jdbcType=BIT}, #{dataAlterationStatus,jdbcType=VARCHAR}, 
      #{closeCompleteFlag,jdbcType=BIT}, #{createUserId,jdbcType=VARCHAR}, #{createDatetime,jdbcType=TIMESTAMP}, 
      #{createProgramId,jdbcType=VARCHAR}, #{updateUserId,jdbcType=VARCHAR}, #{updateDatetime,jdbcType=TIMESTAMP}, 
      #{updateProgramId,jdbcType=VARCHAR})
     ON CONFLICT DO NOTHING 
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fastretailing.dcp.sales.common.entity.optional.PayoffDataOptional">
    update t_pay_off_data
    <set>
      <if test="payoffAmountCurrencyCode != null">
        payoff_amount_currency_code = #{payoffAmountCurrencyCode,jdbcType=VARCHAR},
      </if>
      <if test="payoffAmount != null">
        payoff_amount = #{payoffAmount,jdbcType=NUMERIC},
      </if>
      <if test="payoffQuantity != null">
        payoff_quantity = #{payoffQuantity,jdbcType=NUMERIC},
      </if>
      <if test="reportOutputCount != null">
        report_output_count = #{reportOutputCount,jdbcType=NUMERIC},
      </if>
      <if test="processingFlag != null">
        processing_flag = #{processingFlag,jdbcType=BIT},
      </if>
      <if test="integrityCheckType != null">
        integrity_check_type = #{integrityCheckType,jdbcType=VARCHAR},
      </if>
      <if test="accountingRecordStatus != null">
        accounting_record_status = #{accountingRecordStatus,jdbcType=NUMERIC},
      </if>
      <if test="batchRegion != null">
        batch_region = #{batchRegion,jdbcType=NUMERIC},
      </if>
      <if test="systemBrandCode != null">
        system_brand_code = #{systemBrandCode,jdbcType=VARCHAR},
      </if>
      <if test="systemBusinessCode != null">
        system_business_code = #{systemBusinessCode,jdbcType=VARCHAR},
      </if>
      <if test="systemCountryCode != null">
        system_country_code = #{systemCountryCode,jdbcType=VARCHAR},
      </if>
      <if test="regularTimeErrorNotificationFlag != null">
        regular_time_error_notification_flag = #{regularTimeErrorNotificationFlag,jdbcType=BIT},
      </if>
      <if test="dailySummaryErrorNotificationFlag != null">
        daily_summary_error_notification_flag = #{dailySummaryErrorNotificationFlag,jdbcType=BIT},
      </if>
      <if test="dataAlterationStatus != null">
        data_alteration_status = #{dataAlterationStatus,jdbcType=VARCHAR},
      </if>
      <if test="closeCompleteFlag != null">
        close_complete_flag = #{closeCompleteFlag,jdbcType=BIT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDatetime != null">
        create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="createProgramId != null">
        create_program_id = #{createProgramId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateDatetime != null">
        update_datetime = #{updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateProgramId != null">
        update_program_id = #{updateProgramId,jdbcType=VARCHAR},
      </if>
    </set>
    where store_code = #{storeCode,jdbcType=VARCHAR}
      and payoff_date = #{payoffDate,jdbcType=VARCHAR}
      and payoff_type_code = #{payoffTypeCode,jdbcType=VARCHAR}
      and payoff_type_sub_number_code = #{payoffTypeSubNumberCode,jdbcType=VARCHAR}
      and cash_register_no = #{cashRegisterNo,jdbcType=NUMERIC}
      and advance_received_store_code = #{advanceReceivedStoreCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByConditionSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_pay_off_data
    <set>
      <if test="record.storeCode != null">
        store_code = #{record.storeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payoffDate != null">
        payoff_date = #{record.payoffDate,jdbcType=VARCHAR},
      </if>
      <if test="record.payoffTypeCode != null">
        payoff_type_code = #{record.payoffTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payoffTypeSubNumberCode != null">
        payoff_type_sub_number_code = #{record.payoffTypeSubNumberCode,jdbcType=VARCHAR},
      </if>
      <if test="record.cashRegisterNo != null">
        cash_register_no = #{record.cashRegisterNo,jdbcType=NUMERIC},
      </if>
      <if test="record.advanceReceivedStoreCode != null">
        advance_received_store_code = #{record.advanceReceivedStoreCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payoffAmountCurrencyCode != null">
        payoff_amount_currency_code = #{record.payoffAmountCurrencyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payoffAmount != null">
        payoff_amount = #{record.payoffAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.payoffQuantity != null">
        payoff_quantity = #{record.payoffQuantity,jdbcType=NUMERIC},
      </if>
      <if test="record.reportOutputCount != null">
        report_output_count = #{record.reportOutputCount,jdbcType=NUMERIC},
      </if>
      <if test="record.processingFlag != null">
        processing_flag = #{record.processingFlag,jdbcType=BIT},
      </if>
      <if test="record.integrityCheckType != null">
        integrity_check_type = #{record.integrityCheckType,jdbcType=VARCHAR},
      </if>
      <if test="record.accountingRecordStatus != null">
        accounting_record_status = #{record.accountingRecordStatus,jdbcType=NUMERIC},
      </if>
      <if test="record.batchRegion != null">
        batch_region = #{record.batchRegion,jdbcType=NUMERIC},
      </if>
      <if test="record.systemBrandCode != null">
        system_brand_code = #{record.systemBrandCode,jdbcType=VARCHAR},
      </if>
      <if test="record.systemBusinessCode != null">
        system_business_code = #{record.systemBusinessCode,jdbcType=VARCHAR},
      </if>
      <if test="record.systemCountryCode != null">
        system_country_code = #{record.systemCountryCode,jdbcType=VARCHAR},
      </if>
      <if test="record.regularTimeErrorNotificationFlag != null">
        regular_time_error_notification_flag = #{record.regularTimeErrorNotificationFlag,jdbcType=BIT},
      </if>
      <if test="record.dailySummaryErrorNotificationFlag != null">
        daily_summary_error_notification_flag = #{record.dailySummaryErrorNotificationFlag,jdbcType=BIT},
      </if>
      <if test="record.dataAlterationStatus != null">
        data_alteration_status = #{record.dataAlterationStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.closeCompleteFlag != null">
        close_complete_flag = #{record.closeCompleteFlag,jdbcType=BIT},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDatetime != null">
        create_datetime = #{record.createDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createProgramId != null">
        create_program_id = #{record.createProgramId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDatetime != null">
        update_datetime = #{record.updateDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateProgramId != null">
        update_program_id = #{record.updateProgramId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
</mapper>
