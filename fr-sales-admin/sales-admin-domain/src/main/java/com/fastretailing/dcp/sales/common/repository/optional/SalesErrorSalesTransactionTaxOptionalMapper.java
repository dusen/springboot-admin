package com.fastretailing.dcp.sales.common.repository.optional;

import com.fastretailing.dcp.sales.common.entity.optional.SalesErrorSalesTransactionTaxOptional;
import com.fastretailing.dcp.sales.common.entity.optional.SalesErrorSalesTransactionTaxOptionalCondition;
import com.fastretailing.dcp.sales.common.entity.optional.SalesErrorSalesTransactionTaxOptionalKey;
import java.util.List;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

@Mapper
public interface SalesErrorSalesTransactionTaxOptionalMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    long countByCondition(SalesErrorSalesTransactionTaxOptionalCondition example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    int deleteByCondition(SalesErrorSalesTransactionTaxOptionalCondition example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    int deleteByPrimaryKey(SalesErrorSalesTransactionTaxOptionalKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    int insert(SalesErrorSalesTransactionTaxOptional record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    int insertSelective(SalesErrorSalesTransactionTaxOptional record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    List<SalesErrorSalesTransactionTaxOptional> selectByCondition(SalesErrorSalesTransactionTaxOptionalCondition example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    SalesErrorSalesTransactionTaxOptional selectByPrimaryKey(SalesErrorSalesTransactionTaxOptionalKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    int updateByConditionSelective(@Param("record") SalesErrorSalesTransactionTaxOptional record, @Param("example") SalesErrorSalesTransactionTaxOptionalCondition example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    int updateByCondition(@Param("record") SalesErrorSalesTransactionTaxOptional record, @Param("example") SalesErrorSalesTransactionTaxOptionalCondition example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    int updateByPrimaryKeySelective(SalesErrorSalesTransactionTaxOptional record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_sales_error_sales_transaction_tax
     *
     */
    int updateByPrimaryKey(SalesErrorSalesTransactionTaxOptional record);
}
