/**
 * @(#)BusinessCountryStateSettingMasterOptionalMapper.java
 *
 *                                                          Copyright (c) 2018 Fast Retailing
 *                                                          Corporation.
 */

package com.fastretailing.dcp.sales.common.repository.optional;

import java.util.List;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import com.fastretailing.dcp.sales.common.entity.optional.BusinessCountryStateSettingMasterOptional;
import com.fastretailing.dcp.sales.common.entity.optional.BusinessCountryStateSettingMasterOptionalCondition;

/**
 * This class is a repository that getting records from business country state
 * setting mapped.
 */
@Mapper
public interface BusinessCountryStateSettingMasterOptionalMapper {
	/**
	 * From the table retrieve all relevant items.
	 * 
	 * @param storeCode
	 *            Store code.
	 * @param codeL1
	 *            Code l1.
	 * @param codeL2
	 *            Code l2.
	 * @param codeL3
	 *            Code l3.
	 * @return Business country state setting master optional records.
	 */
	@Select(" SELECT /* SLS0300202-005 */ code_value FROM m_business_country_state_setting "
			+ " WHERE  store_code = #{storeCode} "
			+ " AND code_l1 = #{codeL1} AND code_l2 = #{codeL2} AND code_l3 = #{codeL3} ")
	List<BusinessCountryStateSettingMasterOptional> selectBusinessCountryStateSettingMaster(
			@Param("storeCode") String storeCode, @Param("codeL1") String codeL1, @Param("codeL2") String codeL2,
			@Param("codeL3") String codeL3);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table m_business_country_state_setting
	 *
	 */
	List<BusinessCountryStateSettingMasterOptional> selectByCondition(
			BusinessCountryStateSettingMasterOptionalCondition condition);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table m_business_country_state_setting
	 *
	 */
	int deleteByCondition(BusinessCountryStateSettingMasterOptionalCondition condition);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table m_business_country_state_setting
	 *
	 */
	int insert(BusinessCountryStateSettingMasterOptional record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table m_business_country_state_setting
	 *
	 */
	long countByCondition(BusinessCountryStateSettingMasterOptionalCondition example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table m_business_country_state_setting
	 *
	 */
	int updateByConditionSelective(@Param("record") BusinessCountryStateSettingMasterOptional record,
			@Param("condition") BusinessCountryStateSettingMasterOptionalCondition condition);

	/**
	 * Select business country state setting master optional by business primary
	 * key.
	 * 
	 * @param condition
	 *            Business country state setting master optional.
	 * @return Business country state setting master optional list.
	 */
	List<BusinessCountryStateSettingMasterOptional> selectByBusinessPrimaryKey(
			BusinessCountryStateSettingMasterOptional condition);

}
