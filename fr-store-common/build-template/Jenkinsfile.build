//------------------------------------------------------------------------------
// JenkinsFile
//------------------------------------------------------------------------------
// Build Constant
def CONST_BUILD_TEMPLATE_PATH = "build-template"
def CONST_ENVIRONMENT_DEPENDENT_CONFIG = "environment_dependent_config"

// Build Variable
def build_environment
def nexus_protcol
def nexus_domain
def nexus_port
def aws_account
def buildConfig
def git_repository_name

pipeline {
    agent any
    // agent {
    //    label 'docker-build-slave'
    // }
    tools { 
        jdk 'openjdk-1.8.0'
        maven 'maven3.5.2'
    }
    stages {
        stage('init') {
            steps {
                script {
                    git_repository_name = sh (script:"echo -n ${env.GIT_URL} | sed -e 's|^.*/\\(.\\+\\)\\.git\$|\\1|g'", returnStdout: true)
                    aws_account = sh (script:"aws sts get-caller-identity | jq -r '.Account'", returnStdout: true).trim()

                    buildConfig = readJSON file: "${WORKSPACE}/${CONST_BUILD_TEMPLATE_PATH}/config.json"
                    build_environment = buildConfig[CONST_ENVIRONMENT_DEPENDENT_CONFIG][aws_account].build_environment
                    nexus_protcol = buildConfig[CONST_ENVIRONMENT_DEPENDENT_CONFIG][aws_account].nexus_protcol
                    nexus_domain = buildConfig[CONST_ENVIRONMENT_DEPENDENT_CONFIG][aws_account].nexus_domain
                    nexus_port = buildConfig[CONST_ENVIRONMENT_DEPENDENT_CONFIG][aws_account].nexus_port
                }
            }
        }
        stage('Deploy src') {
            steps {
                script {
                    dir("${WORKSPACE}") {
                        sh "rm -rf ./.repository"
                        sh "mvn -s ${CONST_BUILD_TEMPLATE_PATH}/${build_environment}/setting.xml clean deploy -Dmaven.test.skip=true -DuniqVersion=true -DaltDeploymentRepository=snapshots::default::${nexus_protcol}://${nexus_domain}:${nexus_port}/nexus/content/repositories/releases -Dsettings.security=${CONST_BUILD_TEMPLATE_PATH}/${build_environment}/settings-security.xml -Dmaven.repo.local=./.repository"
                    }
                }
            }
        }
    }
}
